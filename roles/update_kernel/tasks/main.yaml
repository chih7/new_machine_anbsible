---

- name: Check if ELREPO repo is already configured.
  stat: path={{ elrepo_repofile_path }}
  register: elrepo_repofile_result

- name: Import ELREPO GPG key.
  rpm_key:
    key: "{{ elrepo_repo_gpg_key_url }}"
    state: present
  when: not elrepo_repofile_result.stat.exists

- name: Install ELREPO repo.
  shell: rpm -Uvh {{ elrepo_repo_url }}
  register: result
  when: not elrepo_repofile_result.stat.exists

- name: Install ELREPO as a disabled repo.
  lineinfile:
    path: "{{ elrepo_repofile_path }}"
    regexp: '^enabled=1'
    line: 'enabled=0'
  when: elrepo_repo_disabled

- name: Install New Kernel
  yum:
    name: kernel-ml
    enablerepo: elrepo-kernel
    state: present

- name: Set grub to default boot new kernel
  shell: grub2-set-default 0

- name: Check for reboot hint.
  shell: LAST_KERNEL=$(rpm -q --last kernel | awk 'NR==1{sub(/kernel-/,""); print $1}'); CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
  ignore_errors: true
  register: reboot_hint

- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  # when: reboot_hint.stdout.find("reboot") != -1
  register: rebooting

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: rebooting is changed